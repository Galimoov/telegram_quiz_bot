from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# üîê –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = '7825832074:AAG4ToVxI0ywTuBeOeN6jS3XCfXCZLa4rdA'

# üìö –í–æ–ø—Ä–æ—Å—ã –∫–≤–∏–∑–∞
quiz = [
    {
        'question': '–ß—Ç–æ —Ç–∞–∫–æ–µ unit-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ?',
        'options': ['–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞', '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π', '–†–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ'],
        'answer': '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π'
    },
    {
        'question': '–ß—Ç–æ —Ç–∞–∫–æ–µ –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç?',
        'options': ['–û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏', '–û—Ç—á—ë—Ç –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏', '–ü–ª–∞–Ω —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'],
        'answer': '–û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏'
    }
]

user_answers = {}

# üü¢ –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_answers[user_id] = {'current': 0, 'score': 0}

    await send_question(update, context)

# üß† –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞
async def send_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    current = user_answers[user_id]['current']
    
    if current < len(quiz):
        q = quiz[current]
        reply_markup = ReplyKeyboardMarkup.from_column(q['options'], resize_keyboard=True, one_time_keyboard=True)
        await update.message.reply_text(f"–í–æ–ø—Ä–æ—Å {current + 1}: {q['question']}", reply_markup=reply_markup)
    else:
        score = user_answers[user_id]['score']
        await update.message.reply_text(f"–ö–≤–∏–∑ –æ–∫–æ–Ω—á–µ–Ω! –¢—ã –Ω–∞–±—Ä–∞–ª {score} –∏–∑ {len(quiz)}.")
        del user_answers[user_id]

# ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id not in user_answers:
        await update.message.reply_text("–ù–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∫–≤–∏–∑.")
        return

    current = user_answers[user_id]['current']
    answer = update.message.text
    correct_answer = quiz[current]['answer']

    if answer == correct_answer:
        user_answers[user_id]['score'] += 1
        await update.message.reply_text("‚úÖ –í–µ—Ä–Ω–æ!")
    else:
        await update.message.reply_text(f"‚ùå –ù–µ–≤–µ—Ä–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: {correct_answer}")

    user_answers[user_id]['current'] += 1
    await send_question(update, context)

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler('start', start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –û–∂–∏–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    app.run_polling()

